apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "web_app.fullname" . }}
  labels:
    {{- include "web_app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "web_app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "web_app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "web_app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.dbImage.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.dbImage.repository }}:{{ .Values.dbImage.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.dbImage.name }}
              containerPort: {{ .Values.dbImage.containerPort }} 
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ .Values.db.secret }}
          volumeMounts:
            - name: {{ .Values.db.volume }}
              mountPath: {{ .Values.db.mountPath }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.db.volume }}
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "gp2"
      resources:
        requests:
          storage: {{ .Values.db.storage }}